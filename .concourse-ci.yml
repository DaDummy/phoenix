resource_types:
- name: 'pull-request'
  type: 'docker-image'
  source:
    repository: 'teliaoss/github-pr-resource'
- name: cogito
  type: registry-image
  check_every: 24h
  source:
    repository: pix4d/cogito

resources:
- name: 'phoenix.main'
  type: 'git'
  icon: 'git'
  public: true
  check_every: '12h'
  webhook_token: ((gh-webhook))
  source:
    uri: 'https://github.com/lmichaelis/phoenix.git'
    branch: 'main'
- name: 'gcc-12'
  type: 'registry-image'
  icon: 'docker'
  source:
    repository: 'gcc' # could also be the full URL "docker.io/golang"
    tag: "12"
- name: 'phoenix.pr'
  type: 'pull-request'
  icon: 'github'
  check_every: '12h'
  webhook_token: ((gh-webhook))
  source:
    repository: 'lmichaelis/phoenix'
    access_token:  ((gh-token))
- name: 'phoenix.commit'
  type: 'cogito'
  icon: 'github'
  check_every: 24h
  source:
    owner: 'lmichaelis'
    repo: 'phoenix'
    access_token: ((gh-token))

jobs:
- name: 'gcc-12.main'
  public: true
  plan:
  - get: 'repo'
    resource: 'phoenix.main'
    trigger: true
  - get: 'gcc-12'
  - put: 'phoenix.commit'
    inputs: ['repo']
    params: {state: 'pending'}
  - task: 'test'
    image: 'gcc-12'
    privileged: true 
    config:
      platform: 'linux'
      inputs:
      - name: 'repo'
      params:
        CC: 'gcc'
        CXX: 'g++'
      run: &run-tests
        path: 'sh'
        args: 
          - '-c' 
          - |
            apt update
            apt install -y cmake ninja-build
            cmake --version
            gcc --version
            ninja --version
            
            cd repo
            cmake -B build -DPX_BUILD_EXAMPLES=ON -DCMAKE_BUILD_TYPE=Debug -G Ninja
            cmake --build build
            
            cd tests
            ./../build/phoenix-tests -tse=script,world,messages
    on_success:
      put: 'phoenix.commit'
      inputs: ['repo']
      params: {state: 'success'}
    on_failure:
      put: 'phoenix.commit'
      inputs: ['repo']
      params: {state: 'failure'}
    on_error:
      put: 'phoenix.commit'
      inputs: ['repo']
      params: {state: 'error'}
    on_abort:
      put: 'phoenix.commit'
      inputs: ['repo']
      params: {state: 'abort'}
- name: 'gcc-12.pull'
  public: true
  plan:
  - get: 'repo'
    resource: 'phoenix.pr'
    trigger: true
    version: 'every'
  - put: 'phoenix.pr'
    params:
      path: 'repo'
      description: 'Waiting for tests to finish.'
      status: 'pending'
  - get: 'gcc-12'
  - task: 'build'
    image: 'gcc-12'
    config:
      platform: 'linux'
      inputs:
      - name: 'repo'
      run: *run-tests
    on_failure:
      put: 'phoenix.pr'
      params:
        path: 'repo'
        description: 'Tests failed.'
        status: 'failure'
  - put: 'phoenix.pr'
    params:
      path: 'repo'
      description: 'Tests completed successfully.'
      status: 'success'
